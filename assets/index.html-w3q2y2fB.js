import{_ as p,c as l,a,b as h,d as i,w as n,r,o as d,e as t}from"./app-BVpc6fz1.js";const c={},k={class:"table-of-contents"};function o(y,s){const e=r("router-link");return d(),l("div",null,[a("nav",k,[a("ul",null,[a("li",null,[i(e,{to:"#关键点"},{default:n(()=>s[0]||(s[0]=[t("关键点")])),_:1})]),a("li",null,[i(e,{to:"#示例"},{default:n(()=>s[1]||(s[1]=[t("示例")])),_:1})])])]),s[2]||(s[2]=h(`<p>在 Python 中，<code>reversed()</code> 函数用于反转一个序列，如列表、元组、字符串或任何实现了 <code>__reversed__()</code> 或者序列协议 (<code>__len__()</code> 和 <code>__getitem__()</code> 方法) 的对象。这个函数返回一个反转后元素的迭代器。</p><h2 id="关键点" tabindex="-1"><a class="header-anchor" href="#关键点"><span>关键点</span></a></h2><p>下面是 <code>reversed()</code> 函数的一些关键点：</p><ol><li><p><strong>返回类型</strong>：<code>reversed()</code> 返回一个迭代器。它不是一个列表或元组，但你可以用 <code>list()</code> 或 <code>tuple()</code> 函数将其转换成列表或元组。</p></li><li><p><strong>不改变原始序列</strong>：<code>reversed()</code> 不会改变原始序列，而是创建一个新的迭代器，其中的元素是原始序列的元素的逆序。</p></li><li><p><strong>使用场景</strong>：当你需要遍历序列的元素，但又不想改变原始序列的顺序时，可以使用 <code>reversed()</code>。</p></li></ol><p>例如，如果你有一个字符串 <code>s = &quot;hello&quot;</code>，使用 <code>reversed(s)</code> 将返回一个迭代器，其中的字符按 <code>&quot;hello&quot;</code> 的逆序排列。</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">s</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">char</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">in</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">reversed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">s</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">char</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">end</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">输出</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&quot;olleh&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者，你可以将迭代器转换成一个列表或字符串：</p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">reversed_list</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">reversed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">s</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">[&#39;o&#39;,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&#39;l&#39;,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&#39;l&#39;,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&#39;e&#39;,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&#39;h&#39;]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">reversed_string</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">join</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">reversed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">s</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&quot;olleh&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>reversed()</code> 在处理需要逆序访问元素的场景时非常有用，尤其是在不想或不需要修改原始数据结构的情况下。</p>`,10))])}const A=p(c,[["render",o],["__file","index.html.vue"]]),D=JSON.parse('{"path":"/python/8lzdbcc2/","title":"reversed() 函数","lang":"zh-CN","frontmatter":{"createTime":"2025/02/17 16:59:38","permalink":"/python/8lzdbcc2/","title":"reversed() 函数","description":"在 Python 中，reversed() 函数用于反转一个序列，如列表、元组、字符串或任何实现了 __reversed__() 或者序列协议 (__len__() 和 __getitem__() 方法) 的对象。这个函数返回一个反转后元素的迭代器。 关键点 下面是 reversed() 函数的一些关键点： 返回类型：reversed() 返回一个迭代...","head":[["meta",{"property":"og:url","content":"https://notes.moniter.top/python/8lzdbcc2/"}],["meta",{"property":"og:site_name","content":"Richie Lin"}],["meta",{"property":"og:title","content":"reversed() 函数"}],["meta",{"property":"og:description","content":"在 Python 中，reversed() 函数用于反转一个序列，如列表、元组、字符串或任何实现了 __reversed__() 或者序列协议 (__len__() 和 __getitem__() 方法) 的对象。这个函数返回一个反转后元素的迭代器。 关键点 下面是 reversed() 函数的一些关键点： 返回类型：reversed() 返回一个迭代..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"reversed() 函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{},"autoDesc":true,"filePathRelative":"notes/python/library/function/function-reversed.md"}');export{A as comp,D as data};
