import{_ as p,c as t,a,b as h,d as n,w as e,r as c,o as k,e as l}from"./app-BVpc6fz1.js";const d={},r={class:"table-of-contents"};function o(g,s){const i=c("router-link");return k(),t("div",null,[a("nav",r,[a("ul",null,[a("li",null,[n(i,{to:"#简介"},{default:e(()=>s[0]||(s[0]=[l("简介")])),_:1})]),a("li",null,[n(i,{to:"#镜像构成"},{default:e(()=>s[1]||(s[1]=[l("镜像构成")])),_:1}),a("ul",null,[a("li",null,[n(i,{to:"#修改容器内容"},{default:e(()=>s[2]||(s[2]=[l("修改容器内容")])),_:1})]),a("li",null,[n(i,{to:"#保存为新镜像"},{default:e(()=>s[3]||(s[3]=[l("保存为新镜像")])),_:1})]),a("li",null,[n(i,{to:"#使用新镜像"},{default:e(()=>s[4]||(s[4]=[l("使用新镜像")])),_:1})])])]),a("li",null,[n(i,{to:"#commit-命令的局限性"},{default:e(()=>s[5]||(s[5]=[l("commit 命令的局限性")])),_:1}),a("ul",null,[a("li",null,[n(i,{to:"#_1-黑箱操作"},{default:e(()=>s[6]||(s[6]=[l("1. 黑箱操作")])),_:1})]),a("li",null,[n(i,{to:"#_2-镜像臃肿"},{default:e(()=>s[7]||(s[7]=[l("2. 镜像臃肿")])),_:1})])])]),a("li",null,[n(i,{to:"#最佳实践"},{default:e(()=>s[8]||(s[8]=[l("最佳实践")])),_:1}),a("ul",null,[a("li",null,[n(i,{to:"#使用-dockerfile"},{default:e(()=>s[9]||(s[9]=[l("使用 Dockerfile")])),_:1})]),a("li",null,[n(i,{to:"#commit-的适用场景"},{default:e(()=>s[10]||(s[10]=[l("commit 的适用场景")])),_:1})])])])])]),s[11]||(s[11]=h(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Docker 镜像采用分层存储架构,每一层都基于前一层进行增量修改。通过 <code>docker commit</code> 命令,我们可以:</p><ul><li>理解镜像的分层结构</li><li>将容器的修改保存为新镜像</li><li>了解镜像构建的基本原理</li></ul><blockquote><p><strong>注意:</strong> 实际环境中应该使用 Dockerfile 来构建镜像,而不是 commit 命令。</p></blockquote><h2 id="镜像构成" tabindex="-1"><a class="header-anchor" href="#镜像构成"><span>镜像构成</span></a></h2><p>Docker 镜像和容器都采用分层存储结构:</p><ul><li>镜像层: 只读层,用于存储应用程序和依赖</li><li>容器层: 可写层,运行时的文件变更都记录在这里</li></ul><p>下面通过定制一个 Web 服务器镜像来理解这个过程:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">run</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">--name</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">webserver</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-d</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-p</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">80:80</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">启动</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">Nginx</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">容器</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">container</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ls</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#查看正在运行的容器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>访问说明:</strong></p><ul><li>本机运行: 访问 <a href="http://localhost" target="_blank" rel="noopener noreferrer">http://localhost</a></li><li>虚拟机/云服务器: 使用对应的 IP 地址</li></ul><h3 id="修改容器内容" tabindex="-1"><a class="header-anchor" href="#修改容器内容"><span>修改容器内容</span></a></h3><p>使用 <code>docker exec</code> 命令进入容器并修改内容:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">exec</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-it</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">webserver</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">bash</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&lt;h1&gt;Welcome</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">you</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">come</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">in</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">my</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">wanglh&lt;/h1&gt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/usr/share/nginx/html/index.html</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#修改主页内容</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">exit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">查看修改内容</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">diff</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">webserver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>命令说明:</strong></p><ul><li><code>-i</code>: 保持标准输入打开</li><li><code>-t</code>: 分配伪终端</li><li><code>bash</code>: 指定要运行的命令</li></ul><p><strong>文件变更:</strong></p><ul><li><code>C</code>: 表示文件被修改</li><li><code>A</code>: 表示新增文件</li><li><code>D</code>: 表示删除文件</li></ul><h3 id="保存为新镜像" tabindex="-1"><a class="header-anchor" href="#保存为新镜像"><span>保存为新镜像</span></a></h3><p>使用 <code>docker commit</code> 命令将修改后的容器保存为新镜像:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">commit</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[选项]</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">容器ID或容器名</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">仓库名</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">标签</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">commit</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--author</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">To</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">wanglh</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&lt;wlh_richard@163.com&gt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">--message</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">修改默认主页内容</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">webserver</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">nginx:v2</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#回车</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">查看新镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">image</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">查看镜像历史</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">history</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx:v2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数说明:</strong></p><ul><li><code>--author</code>: 指定作者信息</li><li><code>--message</code>: 记录修改说明</li><li><code>webserver</code>: 容器名</li><li><code>nginx:v2</code>: 新镜像的名称和标签</li></ul><h3 id="使用新镜像" tabindex="-1"><a class="header-anchor" href="#使用新镜像"><span>使用新镜像</span></a></h3><p>基于新镜像启动容器:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">run</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">--name</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">web2</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-d</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-p</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">81:80</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nginx:v2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="commit-命令的局限性" tabindex="-1"><a class="header-anchor" href="#commit-命令的局限性"><span>commit 命令的局限性</span></a></h2><h3 id="_1-黑箱操作" tabindex="-1"><a class="header-anchor" href="#_1-黑箱操作"><span>1. 黑箱操作</span></a></h3><p>使用 commit 方式构建镜像的问题:</p><ul><li>操作过程不透明</li><li>无法重现完整的构建过程</li><li>维护困难,容易导致镜像不一致</li></ul><h3 id="_2-镜像臃肿" tabindex="-1"><a class="header-anchor" href="#_2-镜像臃肿"><span>2. 镜像臃肿</span></a></h3><p>容易导致镜像臃肿的原因:</p><ul><li>所有操作都会产生新的层</li><li>即使删除文件也会增加层大小</li><li>临时文件和缓存也会被保存</li></ul><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><h3 id="使用-dockerfile" tabindex="-1"><a class="header-anchor" href="#使用-dockerfile"><span>使用 Dockerfile</span></a></h3><ul><li>使用 Dockerfile 构建镜像</li><li>保证构建过程可重复</li><li>便于版本控制和维护</li></ul><h3 id="commit-的适用场景" tabindex="-1"><a class="header-anchor" href="#commit-的适用场景"><span>commit 的适用场景</span></a></h3><ul><li>调试环境保存</li><li>事故现场保存</li><li>临时测试用途</li></ul>`,39))])}const A=p(d,[["render",o],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/linux/grf7te44/","title":"04. 利用commit理解镜像构成","lang":"zh-CN","frontmatter":{"createTime":"2025/02/17 16:59:04","permalink":"/linux/grf7te44/","title":"04. 利用commit理解镜像构成","description":"简介 Docker 镜像采用分层存储架构,每一层都基于前一层进行增量修改。通过 docker commit 命令,我们可以: 理解镜像的分层结构 将容器的修改保存为新镜像 了解镜像构建的基本原理 注意: 实际环境中应该使用 Dockerfile 来构建镜像,而不是 commit 命令。 镜像构成 Docker 镜像和容器都采用分层存储结构: 镜像层: ...","head":[["meta",{"property":"og:url","content":"https://notes.moniter.top/linux/grf7te44/"}],["meta",{"property":"og:site_name","content":"Richie Lin"}],["meta",{"property":"og:title","content":"04. 利用commit理解镜像构成"}],["meta",{"property":"og:description","content":"简介 Docker 镜像采用分层存储架构,每一层都基于前一层进行增量修改。通过 docker commit 命令,我们可以: 理解镜像的分层结构 将容器的修改保存为新镜像 了解镜像构建的基本原理 注意: 实际环境中应该使用 Dockerfile 来构建镜像,而不是 commit 命令。 镜像构成 Docker 镜像和容器都采用分层存储结构: 镜像层: ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04. 利用commit理解镜像构成\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{},"autoDesc":true,"filePathRelative":"notes/linux/Kubernetes/Docker系列学习/Docker系列学习-04.利用commit理解镜像构成.md"}');export{A as comp,m as data};
